# ===============================================
# ArcelorMittal Customer Management System
# Requirements & Dependencies
# Version: 4.0.0
# Last Updated: October 5, 2025
# ===============================================

# ===============================================
# SYSTEM REQUIREMENTS
# ===============================================

Node.js: v16.0.0 or higher (Recommended: v20.15.1)
npm: v8.0.0 or higher (Recommended: v10.8.2)
PostgreSQL: v14.0 or higher (For database)
Operating System: Windows 10/11, macOS, Linux

# ===============================================
# BACKEND DEPENDENCIES (Node.js)
# ===============================================

# Package Manager: npm
# Package file: arcelor-backend/package.json

## Core Dependencies:
@prisma/client: ^5.20.0          # Database ORM client
axios: ^1.12.2                    # HTTP client for API requests
cors: ^2.8.5                      # Cross-Origin Resource Sharing
dotenv: ^17.2.3                   # Environment variable management
express: ^5.1.0                   # Web framework
form-data: ^4.0.4                 # Form data handling
multer: ^2.0.2                    # File upload middleware
winston: ^3.14.2                  # Logging library
zod: ^3.23.8                      # Schema validation

## Development Dependencies:
nodemon: ^3.1.4                   # Auto-restart server on changes
prisma: ^5.20.0                   # Database ORM toolkit

# ===============================================
# FRONTEND DEPENDENCIES (React)
# ===============================================

# Package Manager: npm
# Package file: arcelor-frontend/package.json

## Core Dependencies:
react: ^19.1.1                    # React library
react-dom: ^19.1.1                # React DOM rendering
react-scripts: 5.0.1              # Create React App scripts
axios: ^1.12.2                    # HTTP client
web-vitals: ^2.1.4                # Performance metrics

## Testing Dependencies:
@testing-library/dom: ^10.4.1
@testing-library/jest-dom: ^6.9.0
@testing-library/react: ^16.3.0
@testing-library/user-event: ^13.5.0

## Development Dependencies:
@tailwindcss/postcss: ^4.1.13     # Tailwind CSS PostCSS plugin
autoprefixer: ^10.4.21            # CSS autoprefixer
postcss: ^8.5.6                   # CSS transformation tool
tailwindcss: ^3.4.0               # Utility-first CSS framework

# ===============================================
# EXTERNAL SERVICES
# ===============================================

OCR Service: External API endpoint
  - URL: Configured in backend .env
  - Purpose: Document text extraction
  - Timeout: 90 seconds

Gemini API: Google Generative AI
  - Purpose: Data transformation & mapping
  - API Key: Required in backend .env
  - Model: gemini-1.5-pro-latest

# ===============================================
# DATABASE
# ===============================================

PostgreSQL Database:
  - Version: 14.0 or higher
  - Schema managed by: Prisma ORM
  - Migration tool: prisma migrate
  - Connection string: Set in .env as DATABASE_URL

Prisma Schema Location: arcelor-backend/prisma/schema.prisma

# ===============================================
# ENVIRONMENT VARIABLES
# ===============================================

## Backend (.env file required):
PORT=5001
DATABASE_URL=postgresql://user:password@localhost:5432/arcelordb
OCR_SERVICE_URL=http://your-ocr-service-url
OCR_TIMEOUT=90000
OCR_MODEL=gemini-2.5-flash
GEMINI_API_URL=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent
GEMINI_API_KEY=your_gemini_api_key_here
LOG_LEVEL=info
NODE_ENV=development

## Frontend:
No environment variables required (API URLs hardcoded to localhost:5001)

# ===============================================
# INSTALLATION COMMANDS
# ===============================================

## Backend Installation:
cd arcelor-backend
npm install
npx prisma generate
npx prisma migrate dev

## Frontend Installation:
cd arcelor-frontend
npm install

# ===============================================
# START COMMANDS
# ===============================================

## Start Backend:
cd arcelor-backend
npm start
# Server runs on: http://localhost:5001

## Start Frontend:
cd arcelor-frontend
npm start
# App opens on: http://localhost:3000

# ===============================================
# PROJECT STRUCTURE
# ===============================================

customer_masterdata_extraaction/
├── arcelor-backend/              # Node.js + Express Backend
│   ├── src/
│   │   ├── api/                  # Route handlers
│   │   ├── services/             # Business logic
│   │   ├── utils/                # Utilities (DB, Logger)
│   │   ├── validation/           # Zod schemas
│   │   └── config/               # Configuration
│   ├── prisma/                   # Database schema
│   ├── uploads/                  # Uploaded files
│   ├── logs/                     # Application logs
│   ├── server.js                 # Entry point
│   └── package.json              # Dependencies
│
├── arcelor-frontend/             # React Frontend
│   ├── src/
│   │   ├── components/           # Reusable components
│   │   ├── context/              # Global state
│   │   ├── steps/                # Form steps (0-6)
│   │   ├── App.js                # Main app
│   │   └── index.js              # Entry point
│   ├── public/                   # Static files
│   │   └── loggo.png             # Application logo
│   └── package.json              # Dependencies
│
└── Documentation files (.md)

# ===============================================
# KEY FEATURES
# ===============================================

✅ Multi-application support (3 types)
✅ Sidebar navigation
✅ 6-step form with validation (optional)
✅ OCR document processing
✅ Automatic data extraction
✅ Spanish UI for end users
✅ English documentation for developers
✅ Database integration (PostgreSQL + Prisma)
✅ Professional logging (Winston)
✅ Modern UI (React + Tailwind CSS)
✅ Dropdown fields with predefined values

# ===============================================
# FORM DROPDOWNS CONFIGURED
# ===============================================

Step 1 - Datos de Solicitud:
  - CENTRO: 19 options
  - CANAL: 1 option
  - SECTOR: 18 options
  - COND. PAGO PROV.: 33 options
  - CENTRO ORIGEN: 19 options

Step 2 - Datos Generales:
  - RAMO: 28 options

# ===============================================
# PORTS USED
# ===============================================

5001: Backend API server
3000: Frontend React app
5432: PostgreSQL database (default)
5555: Prisma Studio (when running)

# ===============================================
# BROWSER COMPATIBILITY
# ===============================================

Recommended Browsers:
  - Google Chrome (latest)
  - Mozilla Firefox (latest)
  - Microsoft Edge (latest)
  - Safari (latest)

Minimum Browser Versions:
  - Chrome 90+
  - Firefox 88+
  - Edge 90+
  - Safari 14+

# ===============================================
# DEVELOPMENT TOOLS (Optional)
# ===============================================

VS Code Extensions (Recommended):
  - ESLint
  - Prettier
  - Tailwind CSS IntelliSense
  - Prisma
  - GitLens

Database Tools:
  - Prisma Studio (built-in)
  - pgAdmin (for PostgreSQL)
  - DBeaver (universal)

API Testing:
  - Postman
  - Thunder Client (VS Code)
  - curl (command line)

# ===============================================
# SECURITY CONSIDERATIONS
# ===============================================

✅ CORS enabled for frontend communication
✅ Environment variables for sensitive data
✅ Validation on both client and server side
✅ File upload restrictions (Multer)
✅ Winston logging for audit trails
✅ No passwords stored in code

# ===============================================
# PERFORMANCE
# ===============================================

Expected Performance:
  - Page load: < 2 seconds
  - OCR processing: 30-90 seconds (depends on document)
  - Form submission: < 1 second
  - Database queries: < 100ms

Resource Usage:
  - Backend RAM: ~200-300 MB
  - Frontend RAM: ~100-150 MB
  - Database: ~50 MB (initial)
  - Disk space: ~500 MB (including node_modules)

# ===============================================
# TROUBLESHOOTING
# ===============================================

Common Issues:

1. Port already in use:
   - Kill process: taskkill /PID <PID> /F (Windows)
   - Or change PORT in .env file

2. Database connection failed:
   - Check PostgreSQL is running
   - Verify DATABASE_URL in .env
   - Run: npx prisma migrate dev

3. Logo not appearing:
   - File location: arcelor-frontend/public/loggo.png
   - Clear browser cache: Ctrl + Shift + R

4. OCR not working:
   - Check OCR_SERVICE_URL in .env
   - Verify external service is accessible
   - Check logs: arcelor-backend/logs/error.log

# ===============================================
# DOCUMENTATION FILES
# ===============================================

README.md                        - Project overview
QUICK_START.md                   - Setup instructions
START_APPLICATION.md             - How to start
ARCHITECTURE.md                  - Technical architecture
UI_ARCHITECTURE.md               - UI structure details
LOGO_AND_BRANDING_GUIDE.md      - Logo management
QUICK_REFERENCE.md               - Quick lookup
VISUAL_GUIDE.md                  - Visual tour
DEVELOPER_NOTES.md               - Developer guidelines
DEBUGGING_GUIDE.md               - Debugging help
REQUIREMENTS.txt                 - This file

# ===============================================
# VERSION HISTORY
# ===============================================

v4.0.0 (Current):
  - Multi-application UI with sidebar
  - Spanish UI + English docs
  - Dropdown fields configured
  - No mandatory validation
  - Logo updated to loggo.png

v3.0.0:
  - Complete 6-step form
  - Database integration
  - Validation + Logging

v2.0.0:
  - Multi-step form
  - OCR integration

v1.0.0:
  - Initial setup
  - Basic upload

# ===============================================
# SUPPORT & MAINTENANCE
# ===============================================

For questions:
  - Check documentation files
  - Review logs in arcelor-backend/logs/
  - Check browser console (F12)
  - Verify .env configuration

Maintenance:
  - Update dependencies: npm update
  - Check for security: npm audit
  - Database backup: pg_dump (PostgreSQL)
  - Clear logs periodically

# ===============================================
# LICENSE
# ===============================================

Internal ArcelorMittal project
Proprietary and confidential
© 2025 ArcelorMittal

# ===============================================
# END OF REQUIREMENTS
# ===============================================

